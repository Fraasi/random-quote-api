{"version":3,"sources":["../../src/routes/authors.route.ts"],"sourcesContent":["import { Router, Request, Response, NextFunction } from \"express\";\nimport { Routes } from \"@interfaces/routes.interface\";\nimport { getAuthors } from \"../databases/mockDB\";\n\nclass AuthorsRoute implements Routes {\n  public path = \"/authors\";\n  public router = Router();\n\n  constructor() {\n    this.initializeRoutes();\n  }\n\n  private controller = (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const authors = getAuthors(req.params.author);\n      res.status(200).json(authors);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  private initializeRoutes() {\n    this.router.get(`${this.path}`, this.controller);\n    this.router.get(`${this.path}/:author`, this.controller);\n  }\n}\n\nexport default AuthorsRoute;\n"],"names":["AuthorsRoute","initializeRoutes","router","get","path","controller","constructor","Router","req","res","next","authors","getAuthors","params","author","status","json","error"],"mappings":"AAAA;;;;+BA2BA,SAA4B;;aAA5B,QAA4B;;yBA3B4B,SAAS;wBAEtC,qBAAqB;AAEhD,IAAA,AAAMA,YAAY,GAAlB,MAAMA,YAAY;IAiBRC,gBAAgB,GAAG;QACzB,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE,IAAI,CAACC,UAAU,CAAC,CAAC;QACjD,IAAI,CAACH,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAACC,UAAU,CAAC,CAAC;IAC3D;IAhBAC,aAAc;QAHd,KAAOF,IAAI,GAAG,UAAU,AAAC,CAAA;QACzB,KAAOF,MAAM,GAAGK,IAAAA,QAAM,OAAA,GAAE,AAAC,CAAA;QAMzB,KAAQF,UAAU,GAAG,CAACG,GAAY,EAAEC,GAAa,EAAEC,IAAkB,GAAK;YACxE,IAAI;gBACF,MAAMC,OAAO,GAAGC,IAAAA,OAAU,WAAA,EAACJ,GAAG,CAACK,MAAM,CAACC,MAAM,CAAC,AAAC;gBAC9CL,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACL,OAAO,CAAC,CAAC;YAChC,EAAE,OAAOM,KAAK,EAAE;gBACdP,IAAI,CAACO,KAAK,CAAC,CAAC;YACd,CAAC;QACH,CAAC,AAAC,CAAA;QAVA,IAAI,CAAChB,gBAAgB,EAAE,CAAC;IAC1B;CAeD;MAED,QAA4B,GAAbD,YAAY"}