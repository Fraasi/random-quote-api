{"version":3,"sources":["../../src/routes/search.route.ts"],"sourcesContent":["import { Router, Request, Response, NextFunction } from \"express\";\nimport { Routes } from \"@interfaces/routes.interface\";\nimport { searchQuotes } from \"../databases/mockDB\";\n\nclass SearchRoute implements Routes {\n  public path = \"/search\";\n  public router = Router();\n\n  constructor() {\n    this.initializeRoutes();\n  }\n\n  private controller = (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const searchResult = searchQuotes(req.params.searchTerm);\n      res.status(200).json(searchResult);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  private initializeRoutes() {\n    this.router.get(`${this.path}`, this.controller);\n    this.router.get(`${this.path}/:searchTerm`, this.controller);\n  }\n}\n\nexport default SearchRoute;\n"],"names":["SearchRoute","initializeRoutes","router","get","path","controller","constructor","Router","req","res","next","searchResult","searchQuotes","params","searchTerm","status","json","error"],"mappings":"AAAA;;;;+BA2BA,SAA2B;;aAA3B,QAA2B;;yBA3B6B,SAAS;wBAEpC,qBAAqB;AAElD,IAAA,AAAMA,WAAW,GAAjB,MAAMA,WAAW;IAiBPC,gBAAgB,GAAG;QACzB,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE,IAAI,CAACC,UAAU,CAAC,CAAC;QACjD,IAAI,CAACH,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,CAACC,UAAU,CAAC,CAAC;IAC/D;IAhBAC,aAAc;QAHd,KAAOF,IAAI,GAAG,SAAS,AAAC,CAAA;QACxB,KAAOF,MAAM,GAAGK,IAAAA,QAAM,OAAA,GAAE,AAAC,CAAA;QAMzB,KAAQF,UAAU,GAAG,CAACG,GAAY,EAAEC,GAAa,EAAEC,IAAkB,GAAK;YACxE,IAAI;gBACF,MAAMC,YAAY,GAAGC,IAAAA,OAAY,aAAA,EAACJ,GAAG,CAACK,MAAM,CAACC,UAAU,CAAC,AAAC;gBACzDL,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACL,YAAY,CAAC,CAAC;YACrC,EAAE,OAAOM,KAAK,EAAE;gBACdP,IAAI,CAACO,KAAK,CAAC,CAAC;YACd,CAAC;QACH,CAAC,AAAC,CAAA;QAVA,IAAI,CAAChB,gBAAgB,EAAE,CAAC;IAC1B;CAeD;MAED,QAA2B,GAAZD,WAAW"}