{"version":3,"sources":["../../src/databases/mockDB.ts"],"sourcesContent":["import quotes from \"./quotes.js\";\n\ntype ResponseObj = {\n  author: string;\n  quotes?: string[];\n  quote?: string;\n};\n\nfunction getRandomQuote(): ResponseObj {\n  const authors = Object.keys(quotes);\n  const randomAuthor = authors[Math.floor(Math.random() * authors.length)];\n  const quoteArr = quotes[randomAuthor];\n  const randomQuote = quoteArr[Math.floor(Math.random() * quoteArr.length)];\n  return {\n    author: randomAuthor,\n    quote: randomQuote,\n  };\n}\n\nfunction getAllQuotes(): { [key: string]: string[] } {\n  return quotes;\n}\n\ntype ResponseArr = Array<string>;\ntype Response = ResponseObj | ResponseArr;\n\nfunction getAuthors(author?: string): Response {\n  if (author === undefined) return Object.keys(quotes).sort();\n\n  const foundAuthor = Object.keys(quotes).find(\n    (key) => key.toLowerCase() === author.toLowerCase()\n  );\n  if (foundAuthor)\n    return {\n      author: foundAuthor,\n      quotes: quotes[foundAuthor],\n    };\n\n  const foundAuthors = Object.keys(quotes)\n    .filter((key) => key.toLowerCase().includes(author.toLowerCase()))\n    .sort();\n\n  return foundAuthors;\n}\n\ninterface PerAuthor {\n  [key: string]: number;\n}\n\ninterface Stats {\n  authors: number;\n  quotes: number;\n  quotesPerAuthor: PerAuthor;\n}\n\nfunction getStats(): Stats {\n  const authorsArray = Object.keys(quotes);\n  let totalQuotes = 0;\n\n  const quotesCounted: PerAuthor = authorsArray.reduce((prev, curr) => {\n    const quotesNum = quotes[curr].length;\n    totalQuotes += quotesNum;\n    prev[curr] = quotesNum;\n    return prev;\n  }, {});\n\n  const quotesCountedSorted: Array<[string, number]> = Object.entries(\n    quotesCounted\n  ).sort(([, v1], [, v2]) => v2 - v1);\n  const quotesPerAuthor = Object.fromEntries(quotesCountedSorted);\n\n  return {\n    authors: authorsArray.length,\n    quotes: totalQuotes,\n    quotesPerAuthor,\n  };\n}\n\ntype SearchResults = {\n  [key: string]: string[];\n};\n\nfunction searchQuotes(searchTerm: string): SearchResults {\n  const searchResults = {};\n\n  for (const [author, a_quotes] of Object.entries(quotes)) {\n    for (const quote of a_quotes) {\n      if (quote.includes(searchTerm)) {\n        if (!(author in searchResults)) searchResults[author] = [];\n        searchResults[author].push(quote);\n      }\n    }\n  }\n  return searchResults;\n}\n\nexport { getRandomQuote, getAllQuotes, getAuthors, getStats, searchQuotes };\n"],"names":["getRandomQuote","getAllQuotes","getAuthors","getStats","searchQuotes","authors","Object","keys","quotes","randomAuthor","Math","floor","random","length","quoteArr","randomQuote","author","quote","undefined","sort","foundAuthor","find","key","toLowerCase","foundAuthors","filter","includes","authorsArray","totalQuotes","quotesCounted","reduce","prev","curr","quotesNum","quotesCountedSorted","entries","v1","v2","quotesPerAuthor","fromEntries","searchTerm","searchResults","a_quotes","push"],"mappings":"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"}